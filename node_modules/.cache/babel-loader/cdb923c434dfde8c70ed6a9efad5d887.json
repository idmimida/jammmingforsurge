{"ast":null,"code":"import _classCallCheck from\"/Users/dan/Documents/Study/Coding/Frontend/JavaScript/Practice/ReactApp/jammmingforsurge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dan/Documents/Study/Coding/Frontend/JavaScript/Practice/ReactApp/jammmingforsurge/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/dan/Documents/Study/Coding/Frontend/JavaScript/Practice/ReactApp/jammmingforsurge/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/dan/Documents/Study/Coding/Frontend/JavaScript/Practice/ReactApp/jammmingforsurge/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/dan/Documents/Study/Coding/Frontend/JavaScript/Practice/ReactApp/jammmingforsurge/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import\"./Track.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Track=/*#__PURE__*/function(_React$Component){_inherits(Track,_React$Component);var _super=_createSuper(Track);function Track(props){var _this;_classCallCheck(this,Track);_this=_super.call(this,props);_this.renderAction=function(){if(_this.props.isRemoval){return/*#__PURE__*/_jsx(\"button\",{className:\"Track-action\",onClick:_this.removeTrack,children:\"-\"});//将本js文件中的removeTrack方法作为event handler挂在-号按钮上\n}else{return/*#__PURE__*/_jsx(\"button\",{className:\"Track-action\",onClick:_this.addTrack,children:\"+\"});//将本js文件中的addTrack方法作为event handler挂在+号按钮上\n}};_this.addTrack=_this.addTrack.bind(_assertThisInitialized(_this));_this.removeTrack=_this.removeTrack.bind(_assertThisInitialized(_this));return _this;}_createClass(Track,[{key:\"addTrack\",value:function addTrack(){this.props.onAdd(this.props.track);//将选中的track传递进自App.js->SearchResults.js->TrackList.js获得的state change方法onAdd中，以验证其id是否与现有id相同，不同则添加，相同则不添加（详见App.js中的addTrack方法）\n}},{key:\"removeTrack\",value:function removeTrack(){this.props.onRemove(this.props.track);//将选中的track传递进自App.js->Playlist.js->TrackList.js获得的state change方法onRemove中，以验证id其是否与选中的曲目相同，相同则不添加（详见App.js中的removeTrack方法）\n}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Track\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Track-information\",children:[/*#__PURE__*/_jsx(\"h3\",{children:this.props.track.name}),/*#__PURE__*/_jsxs(\"p\",{children:[this.props.track.artist,\" | \",this.props.track.album]})]}),this.renderAction()]});}}]);return Track;}(React.Component);","map":{"version":3,"sources":["/Users/dan/Documents/Study/Coding/Frontend/JavaScript/Practice/ReactApp/jammmingforsurge/src/Components/Track/Track.js"],"names":["React","Track","props","renderAction","isRemoval","removeTrack","addTrack","bind","onAdd","track","onRemove","name","artist","album","Component"],"mappings":"u1BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,C,wFAEA,UAAaC,CAAAA,KAAb,0GACE,eAAYC,KAAZ,CAAmB,uCACjB,uBAAMA,KAAN,EADiB,MAMnBC,YANmB,CAMJ,UAAM,CACnB,GAAI,MAAKD,KAAL,CAAWE,SAAf,CAA0B,CACxB,mBAAO,eAAQ,SAAS,CAAC,cAAlB,CAAiC,OAAO,CAAE,MAAKC,WAA/C,eAAP,CACA;AACD,CAHD,IAGO,CACL,mBAAO,eAAQ,SAAS,CAAC,cAAlB,CAAiC,OAAO,CAAE,MAAKC,QAA/C,eAAP,CACA;AACD,CACF,CAdkB,CAEjB,MAAKA,QAAL,CAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB,CACA,MAAKF,WAAL,CAAmB,MAAKA,WAAL,CAAiBE,IAAjB,+BAAnB,CAHiB,aAIlB,CALH,0CAiBE,mBAAW,CACT,KAAKL,KAAL,CAAWM,KAAX,CAAiB,KAAKN,KAAL,CAAWO,KAA5B,EACA;AACD,CApBH,2BAsBE,sBAAc,CACZ,KAAKP,KAAL,CAAWQ,QAAX,CAAoB,KAAKR,KAAL,CAAWO,KAA/B,EACA;AACD,CAzBH,sBA2BE,iBAAS,CACP,mBACE,aAAK,SAAS,CAAC,OAAf,wBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,oBAAK,KAAKP,KAAL,CAAWO,KAAX,CAAiBE,IAAtB,EADF,cAEE,qBAAI,KAAKT,KAAL,CAAWO,KAAX,CAAiBG,MAArB,OAAgC,KAAKV,KAAL,CAAWO,KAAX,CAAiBI,KAAjD,GAFF,GADF,CAMG,KAAKV,YAAL,EANH,GADF,CAUD,CAtCH,mBAA2BH,KAAK,CAACc,SAAjC","sourcesContent":["import React from \"react\";\nimport \"./Track.css\";\n\nexport class Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n  renderAction = () => {\n    if (this.props.isRemoval) {\n      return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>;\n      //将本js文件中的removeTrack方法作为event handler挂在-号按钮上\n    } else {\n      return <button className=\"Track-action\" onClick={this.addTrack}>+</button>;\n      //将本js文件中的addTrack方法作为event handler挂在+号按钮上\n    }\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n    //将选中的track传递进自App.js->SearchResults.js->TrackList.js获得的state change方法onAdd中，以验证其id是否与现有id相同，不同则添加，相同则不添加（详见App.js中的addTrack方法）\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n    //将选中的track传递进自App.js->Playlist.js->TrackList.js获得的state change方法onRemove中，以验证id其是否与选中的曲目相同，相同则不添加（详见App.js中的removeTrack方法）\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\n          {/* 将从App.js->SearchResults.js->TrackList.js中获得的搜索结果按prop-name分项渲染 */}\n        </div>\n        {this.renderAction()}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}